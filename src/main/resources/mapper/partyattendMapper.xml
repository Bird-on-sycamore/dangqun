<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dangqun01.dao.partyattendMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.dangqun01.entity.partyattend" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="activityId" property="activityid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="locatedId" property="locatedid" jdbcType="INTEGER" />
    <result column="attend" property="attend" jdbcType="INTEGER" />
    <result column="begintime" property="begintime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="back01" property="back01" jdbcType="INTEGER" />
    <result column="back02" property="back02" jdbcType="INTEGER" />
    <result column="back03" property="back03" jdbcType="VARCHAR" />
    <result column="back04" property="back04" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, activityId, userId, locatedId, attend, begintime, endtime, back01, back02, back03, 
    back04
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.dangqun01.entity.partyattendExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from partyattend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from partyattend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from partyattend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.dangqun01.entity.partyattendExample" >
    delete from partyattend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.dangqun01.entity.partyattend" >
    insert into partyattend (id, activityId, userId, 
      locatedId, attend, begintime, 
      endtime, back01, back02, 
      back03, back04)
    values (#{id,jdbcType=INTEGER}, #{activityid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{locatedid,jdbcType=INTEGER}, #{attend,jdbcType=INTEGER}, #{begintime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{back01,jdbcType=INTEGER}, #{back02,jdbcType=INTEGER}, 
      #{back03,jdbcType=VARCHAR}, #{back04,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.dangqun01.entity.partyattend" >
    insert into partyattend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityid != null" >
        activityId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="locatedid != null" >
        locatedId,
      </if>
      <if test="attend != null" >
        attend,
      </if>
      <if test="begintime != null" >
        begintime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="back01 != null" >
        back01,
      </if>
      <if test="back02 != null" >
        back02,
      </if>
      <if test="back03 != null" >
        back03,
      </if>
      <if test="back04 != null" >
        back04,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activityid != null" >
        #{activityid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="locatedid != null" >
        #{locatedid,jdbcType=INTEGER},
      </if>
      <if test="attend != null" >
        #{attend,jdbcType=INTEGER},
      </if>
      <if test="begintime != null" >
        #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="back01 != null" >
        #{back01,jdbcType=INTEGER},
      </if>
      <if test="back02 != null" >
        #{back02,jdbcType=INTEGER},
      </if>
      <if test="back03 != null" >
        #{back03,jdbcType=VARCHAR},
      </if>
      <if test="back04 != null" >
        #{back04,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.dangqun01.entity.partyattendExample" resultType="java.lang.Integer" >
    select count(*) from partyattend
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update partyattend
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.activityid != null" >
        activityId = #{record.activityid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.locatedid != null" >
        locatedId = #{record.locatedid,jdbcType=INTEGER},
      </if>
      <if test="record.attend != null" >
        attend = #{record.attend,jdbcType=INTEGER},
      </if>
      <if test="record.begintime != null" >
        begintime = #{record.begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.back01 != null" >
        back01 = #{record.back01,jdbcType=INTEGER},
      </if>
      <if test="record.back02 != null" >
        back02 = #{record.back02,jdbcType=INTEGER},
      </if>
      <if test="record.back03 != null" >
        back03 = #{record.back03,jdbcType=VARCHAR},
      </if>
      <if test="record.back04 != null" >
        back04 = #{record.back04,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update partyattend
    set id = #{record.id,jdbcType=INTEGER},
      activityId = #{record.activityid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      locatedId = #{record.locatedid,jdbcType=INTEGER},
      attend = #{record.attend,jdbcType=INTEGER},
      begintime = #{record.begintime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      back01 = #{record.back01,jdbcType=INTEGER},
      back02 = #{record.back02,jdbcType=INTEGER},
      back03 = #{record.back03,jdbcType=VARCHAR},
      back04 = #{record.back04,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.dangqun01.entity.partyattend" >
    update partyattend
    <set >
      <if test="activityid != null" >
        activityId = #{activityid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="locatedid != null" >
        locatedId = #{locatedid,jdbcType=INTEGER},
      </if>
      <if test="attend != null" >
        attend = #{attend,jdbcType=INTEGER},
      </if>
      <if test="begintime != null" >
        begintime = #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="back01 != null" >
        back01 = #{back01,jdbcType=INTEGER},
      </if>
      <if test="back02 != null" >
        back02 = #{back02,jdbcType=INTEGER},
      </if>
      <if test="back03 != null" >
        back03 = #{back03,jdbcType=VARCHAR},
      </if>
      <if test="back04 != null" >
        back04 = #{back04,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.dangqun01.entity.partyattend" >
    update partyattend
    set activityId = #{activityid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      locatedId = #{locatedid,jdbcType=INTEGER},
      attend = #{attend,jdbcType=INTEGER},
      begintime = #{begintime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      back01 = #{back01,jdbcType=INTEGER},
      back02 = #{back02,jdbcType=INTEGER},
      back03 = #{back03,jdbcType=VARCHAR},
      back04 = #{back04,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- 通过actvityid查 ptatd(人员管理jcac04) -->
     <select id="getPtAtdList" resultMap="BaseResultMap" >
    select *
    from partyattend
    where activityId = #{activityid,jdbcType=INTEGER}
  </select>
   
    <!-- 通过actvityid以及人员id查 ptatd(撤销报名ryac1 ) -->
     <select id="getPtAtdBy2" resultMap="BaseResultMap" >
    select *
    from partyattend
    where activityId = #{activityid,jdbcType=INTEGER}
          and userId = #{userid,jdbcType=INTEGER}
  </select>
   
   
   
</mapper>